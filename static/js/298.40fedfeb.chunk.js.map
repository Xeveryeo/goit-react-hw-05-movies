{"version":3,"file":"static/js/298.40fedfeb.chunk.js","mappings":"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","sources":["pages/MovieList/MovieList.styled.js","pages/MovieList/MovieList.jsx","components/Styles/Element.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/apiService.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 2px 8px;\n\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 0;\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieLink } from './MovieList.styled';\n\nconst MovieList = ({ trendMovies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {trendMovies.map(movie => (\n        <li key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.original_title || movie.name}\n          </MovieLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;","import styled from 'styled-components';\n\nconst SearchBox = styled.div`\n  // background-color: #bb9c95;\n`;\n\n \n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 13px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  padding: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nconst ButtonIcon = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: inherit;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  margin-right: 4px;\n  margin-left: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nconst Button = styled.button`\n  padding: 8px 16px;\n  margin-top: ${p => p.theme.space[4]}px;\n  border: none;\n  border-radius: 15px;\n  background-color: #3f51b5;\n  color: white;\n\n  text-decoration: none;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  cursor: pointer;\n  transition: background-color 250ms linear;\n  &:hover {\n    background-color: #303f9f;\n  }\n`;\n\nconst P = styled.p`\n  color: ${p => p.theme.colors.black};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  padding-top: 0px;\n  padding-bottom: 0px;\n  margin: 0px;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\nconst Gallery = styled.ul`\n  padding-top: 50px;\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  gap: 20px;\n  list-style: none;\n`;\n\nconst GalleryItem = styled.li`\n  display: block;\n  flex-basis: calc((100% - 60px) / 4);\n  height: auto;\n  overflow: hidden;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport { SearchBox, P, Form, ButtonIcon, Input, Button, Gallery, GalleryItem };\n","// SearchBar.jsx\nimport React from 'react';\nimport {\n  ButtonIcon,\n  // SearchBox,\n  Input,\n  Form,\n} from 'components/Styles/Element.styled';\nimport { BsSearch } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    onSubmit(searchForm.elements.movieName.value);\n    searchForm.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"movieName\"\n        title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n        required\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie...\"\n      />\n      <ButtonIcon type=\"submit\" aria-label=\"search button\">\n        <BsSearch />\n      </ButtonIcon>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport default SearchForm;","import React, { useState, useEffect } from 'react';\nimport { searchMovies } from './../../services/apiService';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from '../MovieList/MovieList';\n\nconst Movies = () => {\n  // const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName).then(data => {\n      if (!data.results.length) {\n        setIsLoading(false);\n        setError(true);\n        return alert(\n          'There are no movies with this request. Please try again.'\n        );\n      }\n      setError(false);\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = value => {\n    setSearchParams({ movieName: value });\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && <p>There are no movies with this request. Please try again.</p>}\n      <MovieList trendMovies={moviesList} />\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = '9a0701f2e35c588a9bcc5f999814db26';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["MovieLink","styled","Link","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_ref","trendMovies","location","useLocation","_jsx","children","map","movie","to","concat","id","state","from","original_title","name","Form","Input","ButtonIcon","_templateObject4","_templateObject5","p","theme","space","_templateObject6","colors","black","fonts","body","fontSizes","m","_templateObject7","_templateObject8","onSubmit","_jsxs","e","preventDefault","searchForm","currentTarget","elements","movieName","value","reset","type","title","required","autoComplete","autoFocus","placeholder","BsSearch","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useState","useState","_useState2","moviesList","setMoviesList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","searchMovies","then","data","results","length","alert","SearchBar","MovieList","Loader","API_KEY","axios","getTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","stop","apply","arguments","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}